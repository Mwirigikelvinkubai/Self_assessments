{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kelvin\\\\OneDrive\\\\Desktop\\\\Code\\\\Development\\\\self-assessments\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\n// src/components/Quiz.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz({\n  file\n}) {\n  _s();\n  var _file$questions;\n  const [step, setStep] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const totalQuestions = (file === null || file === void 0 ? void 0 : (_file$questions = file.questions) === null || _file$questions === void 0 ? void 0 : _file$questions.length) || 0;\n  if (!file) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 21\n  }, this);\n  const question = file.questions[step];\n  const handleAnswer = choice => {\n    setAnswers([...answers, choice]);\n    if (step + 1 < totalQuestions) {\n      setStep(step + 1);\n    } else {\n      console.log(\"Quiz finished. Answers:\", answers);\n      // TODO: trigger scoring logic here\n    }\n  };\n\n  // Normalize options to always return [key, text]\n  const getOptions = opts => {\n    if (Array.isArray(opts)) {\n      return opts.map((text, i) => [i.toString(), text]);\n    }\n    if (typeof opts === \"object\") {\n      return Object.entries(opts);\n    }\n    return [];\n  };\n  const options = getOptions(question.options);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-bold mb-4\",\n      children: [\"Question \", step + 1, \" of \", totalQuestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-6\",\n      children: question.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 gap-3\",\n      children: options.map(([key, text]) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(key),\n        className: \"p-3 rounded-lg bg-blue-500 text-white hover:bg-blue-600 transition\",\n        children: text\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"hNiJjN36uJdm+y9o011frvOLX6I=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quiz","file","_s","_file$questions","step","setStep","answers","setAnswers","totalQuestions","questions","length","children","fileName","_jsxFileName","lineNumber","columnNumber","question","handleAnswer","choice","console","log","getOptions","opts","Array","isArray","map","text","i","toString","Object","entries","options","className","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Kelvin/OneDrive/Desktop/Code/Development/self-assessments/src/components/Quiz.js"],"sourcesContent":["// src/components/Quiz.js\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Quiz({ file }) {\r\n  const [step, setStep] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const totalQuestions = file?.questions?.length || 0;\r\n\r\n  if (!file) return <div>Loading...</div>;\r\n\r\n  const question = file.questions[step];\r\n\r\n  const handleAnswer = (choice) => {\r\n    setAnswers([...answers, choice]);\r\n    if (step + 1 < totalQuestions) {\r\n      setStep(step + 1);\r\n    } else {\r\n      console.log(\"Quiz finished. Answers:\", answers);\r\n      // TODO: trigger scoring logic here\r\n    }\r\n  };\r\n\r\n  // Normalize options to always return [key, text]\r\n  const getOptions = (opts) => {\r\n    if (Array.isArray(opts)) {\r\n      return opts.map((text, i) => [i.toString(), text]);\r\n    }\r\n    if (typeof opts === \"object\") {\r\n      return Object.entries(opts);\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const options = getOptions(question.options);\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-lg font-bold mb-4\">\r\n        Question {step + 1} of {totalQuestions}\r\n      </h2>\r\n      <p className=\"mb-6\">{question.question}</p>\r\n      <div className=\"grid grid-cols-1 gap-3\">\r\n        {options.map(([key, text]) => (\r\n          <button\r\n            key={key}\r\n            onClick={() => handleAnswer(key)}\r\n            className=\"p-3 rounded-lg bg-blue-500 text-white hover:bg-blue-600 transition\"\r\n          >\r\n            {text}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}